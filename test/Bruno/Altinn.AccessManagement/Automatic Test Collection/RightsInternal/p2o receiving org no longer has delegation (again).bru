meta {
  name: p2o receiving org no longer has delegation (again)
  type: http
  seq: 34
}

get {
  url: {{baseUrl}}/accessmanagement/api/v1/internal/{{party}}/rights/delegation/received
  body: json
  auth: inherit
}

vars:pre-request {
  auth_tokenType: Personal
  auth_userId: 
  auth_partyId: 
  auth_ssn: 
  party: 
}

script:pre-request {
  const testdata = require(`./Testdata/rights-delegations/${bru.getEnvVar("tokenEnv")}testdata.json`);
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  bru.setVar("party", testdata.org2.dagl.partyid);
  
  var getTokenParameters = {
    auth_userId: testdata.org2.dagl.userid,
    auth_partyId: testdata.org2.dagl.partyid,
    auth_ssn: testdata.org2.dagl.pid,
    scope: sharedtestdata.scopes.read,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.read
  }
    const token = await testTokenGenerator.getToken(getTokenParameters);
  
  bru.setVar("bearerToken",  token);
}

tests {
  test("the sending person successfully revoked delegation from organization", function() {
    const data = res.getBody();  
    expect(res.status).to.equal(200);
    expect(data).to.be.empty;
  });
  
}
