meta {
  name: o2o org attempts to delegate to itself
  type: http
  seq: 35
}

post {
  url: {{baseUrl}}/accessmanagement/api/v1/internal/{{party}}/rights/delegation/received/revoke
  body: json
  auth: inherit
}

body:json {
  
    {
      "from": [
        {
          "id": "urn:altinn:partyid",
          "value": "{{fromPartyId}}" 
        }
      ],
      "rights": [
      {
        "resource": [
          {
            "id": "urn:altinn:org",
            "value": "{{org}}"
          },
          {
            "id": "urn:altinn:app",
            "value": "{{app}}"
          }
        ] 
      }
    ]
  }
  
}

vars:pre-request {
  auth_tokenType: Personal
  auth_userId: 
  auth_partyId: 
  auth_ssn: 
  party: 
  org: 
  app: 
  fromPartyId: 
}

script:pre-request {
  const testdata = require(`./Testdata/rights-delegations/${bru.getEnvVar("tokenEnv")}testdata.json`);
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  bru.setVar("party", testdata.org2.partyid);
  bru.setVar("fromPartyId", testdata.org2.partyid);
  bru.setVar("org", testdata.org);
  bru.setVar("app", testdata.app);
  
  var getTokenParameters = {
    auth_userId: testdata.org2.dagl.userid,
    auth_partyId: testdata.org2.dagl.partyid,
    auth_ssn: testdata.org2.dagl.pid,
    scope: sharedtestdata.scopes.read,
    auth_tokenType: sharedtestdata.authTokenType.personal,
    auth_scopes: sharedtestdata.auth_scopes.read
  }
    const token = await testTokenGenerator.getToken(getTokenParameters);
  
  bru.setVar("bearerToken",  token);
}
