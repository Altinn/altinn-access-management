name: Update Helm Chart Version and Create Pull Request

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  REGISTRY: ${{ secrets.ALTINN_REGISTRY }}
  APP_NAME: altinn-access-management

jobs:
  update-helm-chart:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Azure login"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get latest Helm chart version from ACR
        id: get-latest-version
        run: |
          latest_version=$(az acr repository show-tags --name ${{ env.REGISTRY }} --repository charts/${{ env.APP_NAME }} --output tsv --orderby time_desc --top 1)
          # Replace `_` with `+`, this is due to the oci repo not supporting `+` in tags
          echo "latest_version=${latest_version//_/+}" >> $GITHUB_ENV

      - name: Extract current version from YAML
        id: extract-current-version
        run: |
          current_version=$(yq eval '.spec.chart.spec.version' .deploy/app.yaml)
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Compare versions
        id: compare-versions
        run: |
          if [ "${{ env.latest_version }}" != "${{ env.current_version }}" ]; then
            echo "::set-output name=should_update::true"
          else
            echo "::set-output name=should_update::false"
          fi

      - name: Update YAML file
        if: steps.compare-versions.outputs.should_update == 'true'
        run: |
          yq eval '.spec.chart.spec.version = "${{ env.latest_version }}"' -i .deploy/app.yaml

      - name: Create Pull Request
        if: steps.compare-versions.outputs.should_update == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-branch: true
          commit-message: "Update Helm chart to version ${{ env.latest_version }}"
          title: "Update Helm chart to version ${{ env.latest_version }}"
          body: |
            - The Helm chart has been updated to version ${{ env.latest_version }}.

            Auto-generated by GitHub Actions.
          branch: update-helm-chart-${{ env.latest_version }}

      - name: Clean up
        if: steps.compare-versions.outputs.should_update == 'true'
        run: git checkout main
